//***************************************************************************************
// LAB 4: TIMERS AND PWM
//
// MSP430FR5994 Debouncing
//
// Description: Debounced LED Button Blink. LED1 is toggled by Port 5 interrupt routine
//              Timer B ISR adjusts timing to nullify bouncing.
//
// ACLK = n/a, MCLK = SMCLK = default DCO
//
//           MSP430FR5994
//           -----------
//        /|\|      XIN|-
//         | |         |
//         --|RST  XOUT|-
// BUTTON1-->|P5.6 P1.0|-->LED1
// BUTTON2-->|P5.5 P1.1|-->LED2
//
// Damon Boorstein
// Rowan University
// Date Created: October 9, 2017
// Date Updated: October 9, 2017
//
// Built with Code Composer Studio v7.2.0
//***************************************************************************************

#include <msp430fr5994.h>

#define LED1    BIT0
#define LED2    BIT1
#define BUTTON1 BIT6
#define BUTTON2 BIT5

int main(void)
{
    WDTCTL = WDTPW | WDTHOLD; // Stop watchdog timer
    PM5CTL0 &= ~LOCKLPM5; // Disable GPIO default mode

    P1DIR |= LED2 + LED1; // Set P1.0 and P1.1 to output
    P5REN |= BUTTON1 + BUTTON2; // Enable puller resistor for button-pins
    P5OUT |= BUTTON1 + BUTTON2; // Sets resistor to pull up for buttons

    P5IES &= ~(BUTTON1 + BUTTON2); // Interrupts when button is released
    P5IE |= BUTTON1 + BUTTON2; // Interrupt enable
    P5IFG &= ~(BUTTON1 + BUTTON2); // Clear interrupt flag

    TB0CCTL0 = CCIE; // CCR0 interrupt enabled
    TB0CCR0 = 60000;
    TB0CTL = TBSSEL_2 + MC_0 + TBCLR; // SMCLK, Stop, clear TB0R

    __enable_interrupt();

    __bis_SR_register(LPM0 + GIE); // LPM0 w/ general interrupts enabled

    for(;;){}

}

// Port 1 interrupt routine 1
#pragma vector = PORT5_VECTOR_1
__interrupt void Port_5(void){
    P1OUT ^= LED1; // Toggle LED
    P5IE &= ~BUTTON1; // Clear interrupt
    TB0CTL = TBSSEL_2 + MC_1 + TBCLR; // SMCLK, Up, clear TB0R
    P5IFG &= ~BUTTON1; // Clear interrupt flag
}


// Port 2 interrupt routine 2
#pragma vector = PORT5_VECTOR_2
__interrupt void Port_5(void){
    P1OUT ^= LED2; // Toggle LED
    P5IE &= ~BUTTON2; // Clear interrupt
    TB0CTL = TBSSEL_2 + MC_1 + TBCLR; // SMCLK, Up, clear TB0R
    P5IFG &= ~BUTTON2; // Clear interrupt flag
}


// Timer B0 ISR
#pragma vector=TIMER0_B0_VECTOR
__interrupt void TIMER0_B0_ISR(void){
    TB0CTL = MC_0; // Stop timer
    P5IE |= BUTTON1 + BUTTON2; // Enable interrupt
    P5IFG &= ~(BUTTON1 + BUTTON2); // Clear interrupt flag
}
